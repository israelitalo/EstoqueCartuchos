/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas.Icones;

import Dao.ControlePaginasDao;
import controller.ControlePaginas;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author israe
 */
public class TelaControlePaginas extends javax.swing.JDialog {

    /**
     * Creates new form TelaControlePaginas
     */
    public TelaControlePaginas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregarComboBoxImpressora();
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnCancelar.setEnabled(false);
        desabilitarCampos();
    }

    /*private static SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    
    private Date dataAtual = new Date();
    
    public String getLocalDate(){
        return sdf.format(dataAtual);
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxImpressora = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxData = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        comboBoxSetor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabelData = new javax.swing.JLabel();
        txtQtdFinal = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        txtDataRelatorio = new javax.swing.JFormattedTextField();
        txtQtdAtual = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de páginas impressas");
        setPreferredSize(new java.awt.Dimension(810, 600));
        setSize(new java.awt.Dimension(810, 600));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "IMPRESSORA", "DATA", "TOTAL DE PAG. IMPRESSAS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Botões", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAlterarMouseClicked(evt);
            }
        });
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        btnAlterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAlterarKeyPressed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        btnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExcluirKeyPressed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Campos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Impressora");

        jComboBoxImpressora.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jComboBoxImpressora.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Impressora" }));
        jComboBoxImpressora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxImpressoraMouseClicked(evt);
            }
        });
        jComboBoxImpressora.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jComboBoxImpressoraComponentShown(evt);
            }
        });
        jComboBoxImpressora.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jComboBoxImpressoraInputMethodTextChanged(evt);
            }
        });
        jComboBoxImpressora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxImpressoraActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Último registro da impressora");

        jComboBoxData.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jComboBoxData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Último registro" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("Setor");

        comboBoxSetor.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        comboBoxSetor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Setor" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Pág. impressas em");

        jLabelData.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabelData.setText("  /  /    ");

        txtQtdFinal.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtQtdFinal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQtdFinalStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Páginas Impressas em");

        try {
            txtDataRelatorio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataRelatorio.setToolTipText("Insira aqui a data do relatório de páginas impressas da impressora");
        txtDataRelatorio.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtDataRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataRelatorioActionPerformed(evt);
            }
        });

        txtQtdAtual.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtQtdAtual.setEditor(new javax.swing.JSpinner.NumberEditor(txtQtdAtual, ""));
        txtQtdAtual.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQtdAtualStateChanged(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Telas/Icones/icones/Logout_37127.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQtdAtual)
                            .addComponent(txtQtdFinal)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(200, 200, 200)
                            .addComponent(jLabel7))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jComboBoxImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBoxData, 0, 220, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(comboBoxSetor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxImpressora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelData, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtdFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDataRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQtdAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 762, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private int qtdTotalGlobal;
    
    public Integer getQtdTotalGlobal(){
        return this.qtdTotalGlobal;
    }
    
    private int qtdToDB;
    
    public void setQtdToDB(int qtdToDB){
        this.qtdToDB = qtdToDB;
    }
    
    public Integer getQtdToDB(){
        return qtdToDB;
    }
    
    public String dataToSql(String data){
        
        String dia = data.substring(0,2);
        String mes = data.substring(3,5);
        String ano = data.substring(6,10);
        
        data = ano + "-" + mes + "-" + dia;
        
        return data;
    }
    
    public String dataToJava(String data){
        // 2019-11-05
        String ano = data.substring(0,4);
        String mes = data.substring(5,7);
        String dia = data.substring(8,10);
        
        data = dia + "/" + mes + "/" + ano;
        
        return data;
    }
    
    private void txtQtdAtualStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQtdAtualStateChanged
        if(!btnSalvar.isEnabled()){
            btnAlterar.requestFocus();
        }
        else{
            btnSalvar.requestFocus();
        }
    }//GEN-LAST:event_txtQtdAtualStateChanged

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        ControlePaginasDao cpd = new ControlePaginasDao();
        
        String impressora = (String) jComboBoxImpressora.getSelectedItem();
        
        int idImpressora = cpd.getIdJcomboBoxImpressora(impressora);
        
        String dataToDB = cpd.dataToSql(txtDataRelatorio.getText());
        
        int paginaTotal = (int) txtQtdAtual.getValue();
        
        if(paginaTotal < getQtdTotalGlobal()){
            JOptionPane.showMessageDialog(null, "A quantidade de páginas impressas mais recentemente \n não pode ser menor que a quantidade anterior");
        }
        else{
            ControlePaginas cp = new ControlePaginas();
        
            cp.setIdImpressora(idImpressora);
            cp.setData(dataToDB);
            cp.setPaginaTotal(paginaTotal);
        
            if(!dataToDB.equals("")){
                if(cpd.salvar(cp) == true){
                JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
                limparCampos();
                listarControlePagians();
                }
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jComboBoxImpressoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxImpressoraMouseClicked

    }//GEN-LAST:event_jComboBoxImpressoraMouseClicked

    private void jComboBoxImpressoraInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jComboBoxImpressoraInputMethodTextChanged

    }//GEN-LAST:event_jComboBoxImpressoraInputMethodTextChanged

    private void jComboBoxImpressoraComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jComboBoxImpressoraComponentShown

    }//GEN-LAST:event_jComboBoxImpressoraComponentShown

    public void listarControlePagians(){
        ControlePaginasDao cpd = new ControlePaginasDao();
        
        String impressora = (String)jComboBoxImpressora.getSelectedItem();
        
        if(impressora != "Impressora"){
            int idImpressora = cpd.getIdJcomboBoxImpressora(impressora);
        
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
            model.setNumRows(0);

            //Lista de controle de paginas.
            List<ControlePaginas> lista = cpd.listarControlePaginas(idImpressora);

            model.setNumRows(0);

            for(ControlePaginas cp: cpd.listarControlePaginas(idImpressora)){

                model.addRow(new Object[]{
                cp.getIdControle(),
                cp.getImpressora(),
                cp.getData(),
                cp.getPaginaTotal()
                });
            }
        }
    }
    
    public void limparCampos(){
        qtdTotalGlobal = 0;
        txtQtdFinal.setValue(getQtdTotalGlobal());
        jComboBoxData.removeAllItems();
        jComboBoxData.addItem("Último registro");
        jComboBoxData.setSelectedItem("Último registro");
        jLabelData.setText("  /  /    ");
        jComboBoxImpressora.addItem("Impressora");
        jComboBoxImpressora.setSelectedItem("Impressora");
        comboBoxSetor.removeAllItems();
        comboBoxSetor.addItem("Setor");
        comboBoxSetor.setSelectedItem("Setor");
        txtQtdAtual.setValue(0);
        txtDataRelatorio.setText("");
    }
    
    public void limparCamposParcialmente(){
        qtdTotalGlobal = 0;
        txtQtdFinal.setValue(getQtdTotalGlobal());
        jComboBoxData.removeAllItems();
        jComboBoxData.addItem("Último registro");
        jComboBoxData.setSelectedItem("Último registro");
        jLabelData.setText("  /  /    ");
        //jComboBoxImpressora.addItem("Impressora");
        //jComboBoxImpressora.setSelectedItem("Impressora");
        //comboBoxSetor.removeAllItems();
        //comboBoxSetor.addItem("Setor");
        //comboBoxSetor.setSelectedItem("Setor");
        txtQtdAtual.setValue(0);
        txtDataRelatorio.setText("");
    }
    
    public void desabilitarCampos(){
        jComboBoxData.setEnabled(false);
        comboBoxSetor.setEnabled(false);
        txtQtdAtual.setEnabled(false);
        txtQtdFinal.setEnabled(false);
        txtDataRelatorio.setEnabled(false);
    }
    
    private void jComboBoxImpressoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxImpressoraActionPerformed
        ControlePaginasDao cpd = new ControlePaginasDao();
        
        String impressora = (String)jComboBoxImpressora.getSelectedItem();
        
        listarControlePagians();
                
        if(impressora != "Impressora"){
            
            jComboBoxImpressora.removeItem("Impressora");
            
            int idImpressora = cpd.getIdJcomboBoxImpressora(impressora);
            
            String ultimaData = cpd.getLastDateOfImpressora(idImpressora);
            
            int idSetor = cpd.getIdSetor(impressora);
            
            String setor = cpd.getSetor(idSetor);

                if(setor != null){
                    comboBoxSetor.removeAllItems();
                    comboBoxSetor.addItem(setor);
                }
            
            if(ultimaData != "Não há registros."){
                jComboBoxData.removeAllItems();
        
                jComboBoxData.addItem(ultimaData);
        
                jComboBoxData.setSelectedItem(ultimaData);
        
                jLabelData.setText(ultimaData + ":");
        
                ultimaData = dataToSql(ultimaData);
        
                int qtdFinal = cpd.getQtdPaginas(idImpressora, ultimaData);
        
                qtdTotalGlobal = qtdFinal;
        
                txtQtdFinal.setValue(getQtdTotalGlobal());
                
                txtDataRelatorio.requestFocus();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Não há histórico para a impressora selecionada.");
                limparCamposParcialmente();
                txtDataRelatorio.requestFocus(true);
            }
            listarControlePagians();
            //limparCampos();
            txtDataRelatorio.setEnabled(true);
            txtQtdAtual.setEnabled(true);
            btnCancelar.setEnabled(true);
        }
         
    }//GEN-LAST:event_jComboBoxImpressoraActionPerformed

    private void txtQtdFinalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQtdFinalStateChanged
        txtQtdFinal.setValue(getQtdTotalGlobal());
    }//GEN-LAST:event_txtQtdFinalStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(evt.getClickCount() == 2){
            int linha = selecionarLinha();
            btnSalvar.setEnabled(false);
            btnExcluir.setEnabled(true);
            btnAlterar.setEnabled(true);
            btnCancelar.setEnabled(true);
                if(linha > -1){
                String data = getValorLinha(linha, 2);
                int totalPaginas = Integer.parseInt(getValorLinha(linha, 3));
                
                txtDataRelatorio.setText(data);
                txtQtdAtual.setValue(totalPaginas);
                txtQtdAtual.requestFocus();
                } 
        }
        if(evt.getButton() == 3){
            int linha = selecionarLinha();
            if(linha >= 0){
                jTable1.getSelectionModel().clearSelection();
                btnSalvar.setEnabled(true);
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
                btnCancelar.setEnabled(false);
                limparCampos();
                //listarControlePagians();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setNumRows(0);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int linha = selecionarLinha();
        
        if(linha >= 0){
            ControlePaginasDao cpd = new ControlePaginasDao();
            ControlePaginas cp = new ControlePaginas();
            String impressora = (String) jComboBoxImpressora.getSelectedItem();
            String idControle = (getValorLinha(linha, 0));
            int idControleInt = Integer.parseInt(idControle);
            
            //Dados que serão enviados para o banco de dados.
            String data = dataToSql(txtDataRelatorio.getText());
            System.out.println(data);
            int quantidadeAtual = (int) txtQtdAtual.getValue();
            int idImpressora = cpd.getIdJcomboBoxImpressora(impressora);
            
            cp.setData(data);
            cp.setPaginaFinal(quantidadeAtual);
            cp.setIdImpressora(idImpressora);            
            
            if(cpd.alterar(idControleInt, cp) == true){
                JOptionPane.showMessageDialog(null, "Controle alterado com sucesso.");
                txtQtdAtual.setValue(0);
                txtDataRelatorio.setText("");
                //listarControlePagians();
                btnSalvar.setEnabled(true);
                jTable1.getSelectionModel().clearSelection();
                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);
                desabilitarCampos();
                limparCampos();
                btnAlterar.setEnabled(false);
                btnExcluir.setEnabled(false);
                btnCancelar.setEnabled(false);
            }
            else{
                JOptionPane.showMessageDialog(null, "Erro ao alterar controle.");
            } 
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void txtDataRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataRelatorioActionPerformed
        txtQtdAtual.requestFocus();
    }//GEN-LAST:event_txtDataRelatorioActionPerformed

    private void btnAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarMouseClicked
       
    }//GEN-LAST:event_btnAlterarMouseClicked

    private void btnAlterarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAlterarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int linha = selecionarLinha();
        
            if(linha >= 0){
                ControlePaginasDao cpd = new ControlePaginasDao();
                ControlePaginas cp = new ControlePaginas();
                String impressora = (String) jComboBoxImpressora.getSelectedItem();
                String idControle = (getValorLinha(linha, 0));
                int idControleInt = Integer.parseInt(idControle);

                //Dados que serão enviados para o banco de dados.
                String data = dataToSql(txtDataRelatorio.getText());
                System.out.println(data);
                int quantidadeAtual = (int) txtQtdAtual.getValue();
                int idImpressora = cpd.getIdJcomboBoxImpressora(impressora);

                cp.setData(data);
                cp.setPaginaFinal(quantidadeAtual);
                cp.setIdImpressora(idImpressora);            

                if(cpd.alterar(idControleInt, cp) == true){
                    JOptionPane.showMessageDialog(null, "Controle alterado com sucesso.");
                    txtQtdAtual.setValue(0);
                    txtDataRelatorio.setText("");
                    listarControlePagians();
                    btnSalvar.setEnabled(true);
                    jTable1.getSelectionModel().clearSelection();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Erro ao alterar controle.");
                } 
            }
        }
    }//GEN-LAST:event_btnAlterarKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = selecionarLinha();
        if(linha > -1){
            int idControle = Integer.parseInt(getValorLinha(linha, 0));
            ControlePaginasDao cpd = new ControlePaginasDao();
            if(cpd.excluir(idControle) == true){
                JOptionPane.showMessageDialog(null, "Controle excluído com sucesso.");
                listarControlePagians();
                jTable1.getSelectionModel().clearSelection();
            }
            else{
                JOptionPane.showMessageDialog(null, "Falha ao excluir controle.");
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExcluirKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int linha = selecionarLinha();
            if(linha > -1){
                int idControle = Integer.parseInt(getValorLinha(linha, 0));
                ControlePaginasDao cpd = new ControlePaginasDao();
                if(cpd.excluir(idControle) == true){
                    JOptionPane.showMessageDialog(null, "Controle excluído com sucesso.");
                    listarControlePagians();
                    jTable1.getSelectionModel().clearSelection();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Falha ao excluir controle.");
                }
            }
        }
    }//GEN-LAST:event_btnExcluirKeyPressed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        jTable1.getSelectionModel().clearSelection();
        btnSalvar.setEnabled(true);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
        btnCancelar.setEnabled(false);
        txtDataRelatorio.setEnabled(false);
        txtQtdAtual.setEnabled(false);
        limparCampos();
        //listarControlePagians();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setNumRows(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    public String getValorLinha(Integer linha, Integer coluna){
        String valor = jTable1.getModel().getValueAt(linha, coluna).toString();
        return valor;
    }
    
    public Integer selecionarLinha(){
        int linha = jTable1.getSelectedRow();
        return linha;
    }
    
    public void carregarComboBoxImpressora(){
        ControlePaginasDao cpd = new ControlePaginasDao();
        cpd.carregarComboBoxImpressora(jComboBoxImpressora);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaControlePaginas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaControlePaginas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaControlePaginas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaControlePaginas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaControlePaginas dialog = new TelaControlePaginas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> comboBoxSetor;
    private javax.swing.JComboBox<String> jComboBoxData;
    private javax.swing.JComboBox jComboBoxImpressora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField txtDataRelatorio;
    private javax.swing.JSpinner txtQtdAtual;
    private javax.swing.JSpinner txtQtdFinal;
    // End of variables declaration//GEN-END:variables
}
