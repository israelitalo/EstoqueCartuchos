/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas.Icones;

import Dao.ControleUsuarioDao;
import Dao.UsuarioDao;
import controller.ControleDeUsuario;
import controller.Usuario;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HJP_TI-CPD2
 */
public class TelaControleUsuario extends javax.swing.JDialog {

    /**
     * Creates new form TelaControleUsuario
     */
    public TelaControleUsuario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listarUsuarios();
        btnRemover.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        checkAdm = new javax.swing.JCheckBox();
        checkAtivo = new javax.swing.JCheckBox();
        txtUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        btnSalvar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de Usuários");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "NOME", "LOGIN", "ADM", "ATIVO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Clique com botão direito do mouse para desmarcar uma linha.");
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        checkAdm.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        checkAdm.setText("ADM");
        checkAdm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkAtivo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        checkAtivo.setText("ATIVO");
        checkAtivo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        txtUsuario.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsuarioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Usuário:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Login:");

        txtLogin.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoginActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Senha:");

        txtSenha.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSenhaActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSalvar.setText("Cadastrar");
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvar.setPreferredSize(new java.awt.Dimension(81, 23));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        btnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvarKeyPressed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterar.setPreferredSize(new java.awt.Dimension(81, 23));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        btnAlterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAlterarKeyPressed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnRemover.setText("Excluir");
        btnRemover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        btnRemover.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoverKeyPressed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Telas/Icones/icones/Logout_37127.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(checkAdm)
                                .addGap(18, 18, 18)
                                .addComponent(checkAtivo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addComponent(jLabel4))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAdm)
                    .addComponent(checkAtivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //funcionando a verificação de dois cliques.
        if(evt.getClickCount()== 2){
            btnSalvar.setEnabled(false);
            btnRemover.setEnabled(true);
            int linha = getLinhaTable();
            
            String idUsuario = getValorLinhaTable(linha, 0);
            int idUsuarioInt = Integer.parseInt(idUsuario);
            ControleUsuarioDao usd = new ControleUsuarioDao();
            txtSenha.setText(usd.getPasswordUsuario(idUsuarioInt));
            txtUsuario.setText(getValorLinhaTable(linha, 1));
            txtLogin.setText(getValorLinhaTable(linha, 2));
            
            if(getValorLinhaTable(linha, 4).equals("sim")){
                checkAtivo.setSelected(true);
            }else{
                checkAtivo.setSelected(false);
            }
            
            if(getValorLinhaTable(linha, 3).equals("sim")){
                checkAdm.setSelected(true);
            }else{
                checkAdm.setSelected(false);
            }
            btnAlterar.requestFocus();
        }
        if(evt.getButton() == 3){
            int linha = getLinhaTable();
            if(linha >= 0){
                jTable1.getSelectionModel().clearSelection();
                btnSalvar.setEnabled(true);
                btnRemover.setEnabled(false);
                limparCampos();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        ControleUsuarioDao cud = new ControleUsuarioDao();
        ControleDeUsuario cdu = new ControleDeUsuario();
        UsuarioDao ud = new UsuarioDao();
        Usuario usuario = new Usuario();

        //salvando usuario ao banco de Dados.
        usuario.setNome(txtUsuario.getText());
        usuario.setLogin(txtLogin.getText());
        usuario.setSenha(txtSenha.getText());

        String login = txtLogin.getText();

        if(!txtUsuario.getText().equals("") && !txtLogin.getText().equals("") && !txtSenha.getText().equals("")){
            String loginDisponivel = ud.loginDisponivel(login);
            if(loginDisponivel == "disponivel"){
                ud.salvarUsuario(usuario);
                JOptionPane.showMessageDialog(null, "Usuario cadastrado com sucesso!");

                //selecionando o usario cadastrado acima e salvando-o à tabela controledeusuario.
                int idUsuario = ud.getIdUsuario(login);
                String adm = checarCheck(checkAdm);
                String ativo = checarCheck(checkAtivo);

                cdu.setIdUsuario(idUsuario);
                cdu.setAdm(adm);
                cdu.setAtivo(ativo);

                if(cud.salvar(cdu)){
                    JOptionPane.showMessageDialog(null, "Usuario inserido à tabela controle de usuario.");
                }
                listarUsuarios();
            }
            else{
            JOptionPane.showMessageDialog(null, "Login já existe. Escolha um novo login.");
            txtLogin.setText("");
            txtLogin.requestFocus();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Prencha todos os campos!");
            txtUsuario.requestFocus();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
    //pegando dados da tabela.    
    int linha = getLinhaTable();
    
    if(linha < 0){
        JOptionPane.showMessageDialog(null, "Selecione um item para alterá-lo.");
    }
    else{
        String idUsuario = getValorLinhaTable(linha, 0).toString();
        int idUsuarioInt = Integer.parseInt(idUsuario);
        
        //pegando os dados dos campos de texto e checkBox.
        String txtUsuarioAlter = txtUsuario.getText();
        String txtLoginAlter = txtLogin.getText();
        String txtSenhaAlter = txtSenha.getText();
        String adm = checarCheck(checkAdm);
        String ativo = checarCheck(checkAtivo);

        Usuario usuario = new Usuario();
        UsuarioDao ud = new UsuarioDao();
        ControleUsuarioDao cdud = new ControleUsuarioDao();

        usuario.setNome(txtUsuarioAlter);
        usuario.setLogin(txtLoginAlter);
        usuario.setSenha(txtSenhaAlter);

        if(ud.alterar(usuario, idUsuarioInt) == true){

            ControleDeUsuario cdu = new ControleDeUsuario();
            cdu.setAdm(adm);
            cdu.setAtivo(ativo);
            
            //alterando se usuario é adm e ativo na tabela controledeusuario.
            cdud.alterar(idUsuarioInt, cdu);

            JOptionPane.showMessageDialog(null, "Usuario alterado com sucesso.");
            listarUsuarios();
            limparCampos();
        }
        else{
            JOptionPane.showMessageDialog(null, "Falha ao alterar usuário.");
            listarUsuarios();
            limparCampos();
        }
    }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void txtUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsuarioActionPerformed
        txtLogin.requestFocus();
    }//GEN-LAST:event_txtUsuarioActionPerformed

    private void txtLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoginActionPerformed
        txtSenha.requestFocus();
    }//GEN-LAST:event_txtLoginActionPerformed

    private void txtSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSenhaActionPerformed
        btnSalvar.requestFocus();
    }//GEN-LAST:event_txtSenhaActionPerformed

    private void btnSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            ControleUsuarioDao cud = new ControleUsuarioDao();
            ControleDeUsuario cdu = new ControleDeUsuario();
            UsuarioDao ud = new UsuarioDao();
            Usuario usuario = new Usuario();

            //salvando usuario ao banco de Dados.
            usuario.setNome(txtUsuario.getText());
            usuario.setLogin(txtLogin.getText());
            usuario.setSenha(txtSenha.getText());

            String login = txtLogin.getText();

            if(!txtUsuario.getText().equals("") && !txtLogin.getText().equals("") && !txtSenha.getText().equals("")){
                String loginDisponivel = ud.loginDisponivel(login);
                if(loginDisponivel == "disponivel"){
                    ud.salvarUsuario(usuario);
                    JOptionPane.showMessageDialog(null, "Usuario cadastrado com sucesso!");

                    //selecionando o usario cadastrado acima e salvando-o à tabela controledeusuario.
                    int idUsuario = ud.getIdUsuario(login);
                    String adm = checarCheck(checkAdm);
                    String ativo = checarCheck(checkAtivo);

                    cdu.setIdUsuario(idUsuario);
                    cdu.setAdm(adm);
                    cdu.setAtivo(ativo);

                    if(cud.salvar(cdu)){
                        JOptionPane.showMessageDialog(null, "Usuario inserido à tabela controle de usuario.");
                    }
                    listarUsuarios();
                }
                else{
                JOptionPane.showMessageDialog(null, "Login já existe. Escolha um novo login.");
                txtLogin.setText("");
                txtLogin.requestFocus();
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Prencha todos os campos!");
                txtUsuario.requestFocus();
            }
        }
    }//GEN-LAST:event_btnSalvarKeyPressed

    private void btnAlterarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAlterarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            //pegando dados da tabela.    
            int linha = getLinhaTable();

            if(linha < 0){
                JOptionPane.showMessageDialog(null, "Selecione um item para alterá-lo.");
            }
            else{
                String idUsuario = getValorLinhaTable(linha, 0).toString();
                int idUsuarioInt = Integer.parseInt(idUsuario);

                //pegando os dados dos campos de texto e checkBox.
                String txtUsuarioAlter = txtUsuario.getText();
                String txtLoginAlter = txtLogin.getText();
                String txtSenhaAlter = txtSenha.getText();
                String adm = checarCheck(checkAdm);
                String ativo = checarCheck(checkAtivo);

                Usuario usuario = new Usuario();
                UsuarioDao ud = new UsuarioDao();
                ControleUsuarioDao cdud = new ControleUsuarioDao();

                usuario.setNome(txtUsuarioAlter);
                usuario.setLogin(txtLoginAlter);
                usuario.setSenha(txtSenhaAlter);

                if(ud.alterar(usuario, idUsuarioInt) == true){

                    ControleDeUsuario cdu = new ControleDeUsuario();
                    cdu.setAdm(adm);
                    cdu.setAtivo(ativo);

                    //alterando se usuario é adm e ativo na tabela controledeusuario.
                    cdud.alterar(idUsuarioInt, cdu);

                    JOptionPane.showMessageDialog(null, "Usuario alterado com sucesso.");
                    listarUsuarios();
                    limparCampos();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Falha ao alterar usuário.");
                    listarUsuarios();
                    limparCampos();
                }
            }
        }
    }//GEN-LAST:event_btnAlterarKeyPressed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int linha = getLinhaTable();
        
        int idUsuario = Integer.parseInt(getValorLinhaTable(linha, 0));
        
        UsuarioDao ud = new UsuarioDao();
        
        boolean excluir = ud.excluir(idUsuario);
        
        if(excluir == true){
            JOptionPane.showMessageDialog(null, "Usuário excluído com sucesso.");
            jTable1.getSelectionModel().clearSelection();
        }
        else{
            JOptionPane.showMessageDialog(null, "Erro ao excluir usuário.");
        }
        
        ControleUsuarioDao cdu = new ControleUsuarioDao();
        
        boolean excluirContDeUsu = cdu.excluir(idUsuario);
        
        if(excluirContDeUsu == true){
            JOptionPane.showMessageDialog(null, "Usuário excluído do controle de usuários.");
            jTable1.getSelectionModel().clearSelection();
        }
        else{
            JOptionPane.showMessageDialog(null, "Erro ao excluir usuário do controle de usuários.");
        }
        btnSalvar.setEnabled(true);
        listarUsuarios();
        limparCampos();
        txtUsuario.requestFocus();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnRemoverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoverKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            int linha = getLinhaTable();
        
            int idUsuario = Integer.parseInt(getValorLinhaTable(linha, 0));

            UsuarioDao ud = new UsuarioDao();

            boolean excluir = ud.excluir(idUsuario);

            if(excluir == true){
                JOptionPane.showMessageDialog(null, "Usuário excluído com sucesso.");
                jTable1.getSelectionModel().clearSelection();
            }
            else{
                JOptionPane.showMessageDialog(null, "Erro ao excluir usuário.");
            }

            ControleUsuarioDao cdu = new ControleUsuarioDao();

            boolean excluirContDeUsu = cdu.excluir(idUsuario);

            if(excluirContDeUsu == true){
                JOptionPane.showMessageDialog(null, "Usuário excluído do controle de usuários.");
                jTable1.getSelectionModel().clearSelection();
            }
            else{
                JOptionPane.showMessageDialog(null, "Erro ao excluir usuário do controle de usuários.");
            }
            btnSalvar.setEnabled(true);
            listarUsuarios();
            limparCampos();
            txtUsuario.requestFocus();
        }
    }//GEN-LAST:event_btnRemoverKeyPressed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
       dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    public void limparCampos(){
        txtLogin.setText("");
        txtSenha.setText("");
        txtUsuario.setText("");
    }
    
    public String checarCheck(JCheckBox check){
        String resposta;
        if(check.isSelected()){
            resposta = "sim";
            return resposta;
        }else{
            resposta = "nao";
            return resposta;
        }
    }
    
    public Integer getLinhaTable(){ 
        int linhaSelecionada = jTable1.getSelectedRow();
        return linhaSelecionada;
    }
    
    public String getValorLinhaTable(Integer linha, Integer posicao){
        String valor = jTable1.getValueAt(linha, posicao).toString();
        return valor;
    }
    
    public void listarUsuarios(){
        
        ControleUsuarioDao cud = new ControleUsuarioDao();
        
        List<ControleDeUsuario> litaDeUsuarios = cud.listarUsuarios();
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        model.setNumRows(0);
        
        for(ControleDeUsuario cdu: cud.listarUsuarios()){
            model.addRow(new Object[]{
                cdu.getIdUsuario(),
                cdu.getNome(),
                cdu.getLogin(),
                cdu.getAdm(),
                cdu.getAtivo()
            });
        }
        
        //Definir espaçamendo de colunas.
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaControleUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaControleUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaControleUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaControleUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaControleUsuario dialog = new TelaControleUsuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox checkAdm;
    private javax.swing.JCheckBox checkAtivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
