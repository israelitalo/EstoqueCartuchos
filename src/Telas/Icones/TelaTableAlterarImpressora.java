/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas.Icones;

import Dao.ImpressoraDao;
import controller.Impressora;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author israe
 */
public class TelaTableAlterarImpressora extends javax.swing.JDialog {

    private String impId;
    private String impModelo;
    private String impSerie;
    private String impFabricante;
    private String impSetor;

    public void setImpModelo(String impModelo) {
        this.impModelo = impModelo;
    }

    public void setImpSerie(String impSerie) {
        this.impSerie = impSerie;
    }

    public void setImpFabricante(String impFabricante) {
        this.impFabricante = impFabricante;
    }

    public void setImpSetor(String impSetor) {
        this.impSetor = impSetor;
    }
    
    public String getIdImpressora(){
        return this.impId;
    }
    
    public String getModeloImpressora(){
        return this.impModelo;
    }
    
    public String getSerieImpressora(){
        return this.impSerie;
    }
    
    public String getFabImpressora(){
        return this.impFabricante;
    }
    
    public String getSetorImpressora(){
        return this.impSetor;
    }
    
    /**
     * Creates new form TelaTableAlterarImpressora
     */
    public TelaTableAlterarImpressora(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtBusca.requestFocus(true);
    }

    private String busca;
    
    public String getBusca(){
        return this.busca;
    }
    
    public void setBusca(String busca){
        this.busca = busca;
    }
    
    private Date data = new Date();

    public Date getData() {
        return data;
    }

    public void setData(Date data) {
        this.data = data;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableImpressora = new javax.swing.JTable();
        txtBusca = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jrbTodos = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista de Impressoras");

        jTableImpressora.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTableImpressora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MODELO", "SERIE", "FABRICANTE", "SETOR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableImpressora.setToolTipText("Clique duas vezes em um item para selecion√°-lo.");
        jTableImpressora.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTableImpressora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableImpressoraMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableImpressora);

        txtBusca.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtBusca.setToolTipText("Digite aqui o item que deseja selecionar");
        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Telas/Icones/icones/magnifier.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setToolTipText("Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarKeyPressed(evt);
            }
        });

        jrbTodos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jrbTodos.setSelected(true);
        jrbTodos.setText("Buscar Todos");
        jrbTodos.setToolTipText("Marque para buscar todos os cartuchos cadastrados");
        jrbTodos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Telas/Icones/icones/Logout_37127.png"))); // NOI18N
        jLabel1.setToolTipText("Voltar");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(txtBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(jrbTodos))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbTodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.busca = this.txtBusca.getText().toUpperCase();
        
        if(jrbTodos.isSelected() == true){
            listarImpressora();
            txtBusca.requestFocus(true);
        }
        else
        {
            if(jrbTodos.isSelected() == false && !this.busca.equals("")){
                listarImpressoraLike(busca);
                txtBusca.setText("");
                txtBusca.requestFocus(true);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        btnBuscar.requestFocus(true);
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void btnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.busca = this.txtBusca.getText().toUpperCase();

            if(jrbTodos.isSelected() == true){
                listarImpressora();
                txtBusca.requestFocus(true);
            }
            else
            {
                if(jrbTodos.isSelected() == false && !this.busca.equals("")){
                    listarImpressoraLike(busca);
                    txtBusca.setText("");
                    txtBusca.requestFocus(true);
                }
            }
        }
    }//GEN-LAST:event_btnBuscarKeyPressed

    private void jrbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosActionPerformed
        if(jrbTodos.isSelected()==true){
            btnBuscar.requestFocus(true);
        }
        else{
            txtBusca.requestFocus(true);
        }
    }//GEN-LAST:event_jrbTodosActionPerformed

    private void jTableImpressoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableImpressoraMouseClicked
        if(evt.getClickCount() == 2){
            int linha = jTableImpressora.getSelectedRow();
            if(linha > -1){
                this.impId = jTableImpressora.getModel().getValueAt(linha, 0).toString();
                this.impModelo = jTableImpressora.getModel().getValueAt(linha, 1).toString();
                this.impSerie = jTableImpressora.getModel().getValueAt(linha, 2).toString();
                this.impFabricante = jTableImpressora.getModel().getValueAt(linha, 3).toString();
                this.impSetor = jTableImpressora.getModel().getValueAt(linha, 4).toString();
                
                this.dispose();
            }
            else{
                JOptionPane.showMessageDialog(null, "Selecione uma impressora para prosseguir!");
            }
        }
        else if(evt.getClickCount() == 3){
            jTableImpressora.getSelectionModel().clearSelection();
        }
    }//GEN-LAST:event_jTableImpressoraMouseClicked

    public void listarImpressora(){
        ImpressoraDao impDao = new ImpressoraDao();
        
        List<Impressora> listaImpressoras = impDao.selectImpressora();
        
        DefaultTableModel model = (DefaultTableModel) jTableImpressora.getModel();
        
        model.setNumRows(0);
        
        for(Impressora impressora: impDao.selectImpressora()){
            
            model.addRow(new Object[]{
                impressora.getId_impressora(),
                impressora.getModelo(),
                impressora.getSerie(),
                impressora.getFabricante(),
                impressora.getSetor()
            });
            
        jTableImpressora.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTableImpressora.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTableImpressora.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTableImpressora.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTableImpressora.getColumnModel().getColumn(4).setPreferredWidth(160);
        
        }
        
    }
    
    public void listarImpressoraLike(String busca){
        
        busca = this.busca;
        
        ImpressoraDao impDao = new ImpressoraDao();
        
        List<Impressora> listaImpressoras = impDao.listaImpressoraLike(busca);
        
        DefaultTableModel model = (DefaultTableModel) jTableImpressora.getModel();
        
        model.setNumRows(0);
        
        for(Impressora impressora: impDao.listaImpressoraLike(busca)){
            
            model.addRow(new Object[]{
                
                impressora.getId_impressora(),
                impressora.getModelo(),
                impressora.getSerie(),
                impressora.getFabricante(),
                impressora.getSetor()
            });
            
        jTableImpressora.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTableImpressora.getColumnModel().getColumn(1).setPreferredWidth(250);
        jTableImpressora.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTableImpressora.getColumnModel().getColumn(3).setPreferredWidth(150);
        jTableImpressora.getColumnModel().getColumn(4).setPreferredWidth(160);
        
        }
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTableAlterarImpressora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTableAlterarImpressora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTableAlterarImpressora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTableAlterarImpressora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaTableAlterarImpressora dialog = new TelaTableAlterarImpressora(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableImpressora;
    private javax.swing.JRadioButton jrbTodos;
    private javax.swing.JTextField txtBusca;
    // End of variables declaration//GEN-END:variables
}
